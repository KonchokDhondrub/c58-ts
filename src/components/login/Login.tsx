import { Navigate, useNavigate } from "react-router-dom";
import { useFormik } from "formik";
import { useState, type JSX } from "react";
import * as Yup from "yup";

import MyInput from "../myInput/MyInput";
import MyButton from "../myButton/MyButton";
import { useAppDispatch, useAppSelector } from "../../app/hooks";
import { loginAction } from "../../features/auth/authAction";

import styles from "./Login.module.css";

// loginSchema
export const loginSchema = Yup.object().shape({
  username: Yup.string().required("Username is required"),
  password: Yup.string().min(8, "Password must be at least 8 characters long").required("Password is required"),
});

// Login
export default function Login(): JSX.Element {
  const { error, user } = useAppSelector((store) => store.user);

  // –≥–æ—Ç–æ–≤–∏–º dispatch –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ action –≤ redux
  const dispatch = useAppDispatch();

  //! —Ö—É–∫ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –º–µ–∂–¥—É –º–∞—Ä—à—Ä—É—Ç–∞–º–∏
  const navigate = useNavigate();

  const formik = useFormik({
    initialValues: {
      username: "oliviaw",
      password: "oliviawpass",
    } as { username: string; password: string },
    validateOnChange: false,
    // –¥–æ–±–∞–≤–ª—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º—É
    validationSchema: loginSchema,
    onSubmit: async (values, { resetForm }) => {
      //! –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ redux –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      const user = await dispatch(loginAction(values)).unwrap();

      //! –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—à–ª–∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      if (user) {
        navigate("/");
      }
      resetForm();
    },
  });

  if (user.id) {
    return <Navigate to="/" />;
  }

  return (
    <div>
      <h2>Login üîê</h2>
      <form onSubmit={formik.handleSubmit} className={styles.formStyle}>
        <div>
          <div className={styles.inputForm}>
            <MyInput name={"username"} label={"Type your username üôã‚Äç‚ôÄÔ∏è"} type={"text"} formik={formik} />
          </div>
          <div className={styles.inputForm}>
            <MyInput name={"password"} label={"Type your password üîê"} type={"password"} formik={formik} />{" "}
          </div>

          <MyButton text="sign in" type="submit" />
        </div>
      </form>
      {error && <span style={{ color: "red" }}>{error === "Request failed with status code 400" ? "Mistake in username or pass ü§ñ" : error === "Request failed with status code 404" ? "Request not found 404" : ""}</span>}
    </div>
  );
}
